==859583== Memcheck, a memory error detector
==859583== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==859583== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==859583== Command: ./a.out
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B256: ft::set<str, comp, alloc(str)>::insert(str const&) (set.hpp:580)
==859583==    by 0x10AB77: void ft_insert<ft::set<str, comp, alloc(str)>, char const*>(ft::set<str, comp, alloc(str)>&, char const*) (insert.cpp:14)
==859583==    by 0x10A632: main (insert.cpp:35)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B256: ft::set<str, comp, alloc(str)>::insert(str const&) (set.hpp:580)
==859583==    by 0x10AB77: void ft_insert<ft::set<str, comp, alloc(str)>, char const*>
			(ft::set<str, comp, alloc(str)>&, char const*) (insert.cpp:14)
==859583==    by 0x10A632: main (insert.cpp:35)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B256: ft::set<str, comp, alloc(str)>::insert(str const&) (set.hpp:580)
==859583==    by 0x10AB77: void ft_insert<ft::set<str, comp, alloc(str)>, char const*>(ft::set<str, comp, alloc(str)>&, char const*) (insert.cpp:14)
==859583==    by 0x10A632: main (insert.cpp:35)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B256: ft::set<str, comp, alloc(str)>::insert(str const&) (set.hpp:580)
==859583==    by 0x10AB77: void ft_insert<ft::set<str, comp, alloc(str)>, char const*>(ft::set<str, comp, alloc(str)>&, char const*) (insert.cpp:14)
==859583==    by 0x10A632: main (insert.cpp:35)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    at 0x484B865: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B256: ft::set<str, comp, alloc(str)>::insert(str const&) (set.hpp:580)
==859583==    by 0x10AB77: void ft_insert<ft::set<str, comp, alloc(str)>, char const*>(ft::set<str, comp, alloc(str)>&, char const*) (insert.cpp:14)
==859583==    by 0x10A632: main (insert.cpp:35)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B803: ft::set<str, comp, alloc(str)>::insert(ft::set<str, comp, alloc(str)>::SetIterator, str const&) (set.hpp:605)
==859583==    by 0x10AE22: void ft_insert<ft::set<str, comp, alloc(str)>, ft::set<str, comp, alloc(str)>::SetIterator, char const*>(ft::set<str, comp, alloc(str)>&, ft::set<str, comp, alloc(str)>::SetIterator, char const*) (insert.cpp:26)
==859583==    by 0x10A6CD: main (insert.cpp:45)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B803: ft::set<str, comp, alloc(str)>::insert(ft::set<str, comp, alloc(str)>::SetIterator, str const&) (set.hpp:605)
==859583==    by 0x10AE22: void ft_insert<ft::set<str, comp, alloc(str)>, ft::set<str, comp, alloc(str)>::SetIterator, char const*>(ft::set<str, comp, alloc(str)>&, ft::set<str, comp, alloc(str)>::SetIterator, char const*) (insert.cpp:26)
==859583==    by 0x10A6CD: main (insert.cpp:45)
==859583== 
==859583== Conditional jump or move depends on uninitialised value(s)
==859583==    by 0x10BBD9: ft::tree<str, comp, alloc(set)::add(str const&) (rb_tree.hpp:101)
==859583==    by 0x10B803: ft::set<str, comp, alloc(str)>::insert(ft::set<str, comp, alloc(str)>::SetIterator, str const&) (set.hpp:605)
==859583==    by 0x10AE22: void ft_insert<ft::set<str, comp, alloc(str)>, ft::set<str, comp, alloc(str)>::SetIterator, char const*>(ft::set<str, comp, alloc(str)>&, ft::set<str, comp, alloc(str)>::SetIterator, char const*) (insert.cpp:26)
==859583==    by 0x10A6CD: main (insert.cpp:45)
==859583== 
==859583== 
==859583== HEAP SUMMARY:
==859583==     in use at exit: 55 bytes in 10 blocks
==859583==   total heap usage: 24 allocs, 14 frees, 74,551 bytes allocated
==859583== 
==859583== LEAK SUMMARY:
==859583==    definitely lost: 55 bytes in 10 blocks
==859583==    indirectly lost: 0 bytes in 0 blocks
==859583==      possibly lost: 0 bytes in 0 blocks
==859583==    still reachable: 0 bytes in 0 blocks
==859583==         suppressed: 0 bytes in 0 blocks
==859583== Rerun with --leak-check=full to see details of leaked memory
==859583== 
==859583== Use --track-origins=yes to see where uninitialised values come from
==859583== For lists of detected and suppressed errors, rerun with: -s
==859583== ERROR SUMMARY: 50 errors from 8 contexts (suppressed: 0 from 0)
